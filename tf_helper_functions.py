# -*- coding: utf-8 -*-
"""tf-helper-functions.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19hvryGv5PDjj-pELvc2SbKWb2e5fRMeq
"""

def extract_data(folder):
  """
  Requires pyunpack and patool packages in order to work.
  Takes in a .rar folder name as the first argument and extracts data from it.
  """
  import pyunpack
  pyunpack.Archive(folder).extractall("")

def parse_data(folder):
  """
  Takes the folder name to parse as the first argument and prints all the names of all the files and directories inside of that folder.
  """
  import os

  for dirpath, dirnames, filenames in os.walk(folder):
    print(f"There are {len(filenames)} files and {len(dirnames)} directories in {dirpath}")

def list_classes(folder):
  """
  Takes the folder name as the first argument and prints all classes inside of that folder.
  """
  import pathlib
  import numpy as np

  data_dir = pathlib.Path(folder)
  arr = []
  for item in data_dir.glob("*"):
    arr.append(item.name)
  class_names = np.array(arr)
  print(class_names)

def view_images(folder, class_names, cols=4, rows=1):
  """
  Description:
    Displays images inside of a specified folder.
  
  Arguments:
    folder - name of the folder to parse;
    class_names - pick classes that will be displayed from the folder;
    cols - the number of columns of images;
    rows - the number of rows of images; 
  """

  import matplotlib.image as mpimg
  import matplotlib.pyplot as plt
  import random
  import os
  for i in range(rows):
    fig, ax = plt.subplots(figsize=(14,20), ncols=cols)
    for a in ax:
      random_class_num = random.randint(0, len(class_names)-1)
      random_img_num = random.randint(0, len(os.listdir(f"{folder}/{class_names[random_class_num]}"))-1)
      dir = f"{folder}/{class_names[random_class_num]}"
      random_img = os.listdir(dir)[random_img_num]
      img = mpimg.imread(f"{dir}/{random_img}", 0)
      a.imshow(img)
      a.axis(False)

